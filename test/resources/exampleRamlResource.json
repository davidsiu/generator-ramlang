{
  "type": {
    "typedCollection": {
      "collectionSchema": "staging_profiles"
    }
  },
  "is": [
    "secured"
  ],
  "relativeUri": "/staging-profiles",
  "methods": [
    {
      "responses": {
        "200": {
          "description": "OK",
          "body": {
            "application/json": {
              "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"type\": \"object\",\n  \"description\": \"A collection of all staging profiles\",\n  \"properties\": {\n    \"stagingProfiles\":  {\n      \"type\": \"array\",\n      \"items\": { \"$ref\": \"staging_profile\" }\n    }\n  }\n}\n",
              "example": "{ \"stagingProfiles\" :\n  [\n    {\n      \"persistentProfileId\": \"N_QF_CC05_9\",\n      \"name\": \"Updated Profile Segment\",\n      \"internalName\": \"Name Assigned by Neustar\",\n      \"status\": \"restricted\"\n      \"internalCategories\": [\n        \"Internal Category Level 1\",\n        \"Internal Category Level 2\",\n        \"Internal Category Level 3\",\n        \"Internal Category Level 4\"\n      ],\n      \"categories\": [\"cool\", \"neat\", \"fab\"],\n      \"edited\": true\n    },\n    {\n      \"persistentProfileId\": \"S_046119\",\n      \"name\": \"Updated Profile Segment\",\n      \"internalName\": \"Name Assigned by Neustar\",\n      \"status\": \"restricted\",\n      \"internalCategories\": [\n        \"Internal Category Level 1\",\n        \"Internal Category Level 2\",\n        \"Internal Category Level 3\",\n        \"Internal Category Level 4\"\n      ],\n      \"categories\": [\"cool\", \"neat\", \"fab\"],\n      \"edited\": true\n    }\n  ]\n}\n"
            }
          }
        },
        "401": {
          "description": "Unauthorized\n\nThe request requires user authentication. The response MUST include a WWW-Authenticate header field (section 14.47) containing a challenge applicable to the requested resource. The client MAY repeat the request with a suitable Authorization header field (section 14.8). If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials. If the 401 response contains the same challenge as the prior response, and the user agent has already attempted authentication at least once, then the user SHOULD be presented the entity that was given in the response, since that entity might include relevant diagnostic information. HTTP access authentication is explained in \"HTTP Authentication: Basic and Digest Access Authentication\" [43].\n\nSimilar to 403 Forbidden, but specifically for use when authentication is required and has failed or has not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource. See Basic access authentication and Digest access authentication.\n",
          "body": {
            "application/json": {
              "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"type\": \"object\",\n  \"description\": \"Message\",\n  \"properties\": {\n    \"message\": {\n      \"type\": \"string\",\n      \"required\": true\n    }\n  }\n}\n",
              "example": "{\"message\": \"Authorization required\"}\n"
            }
          }
        },
        "403": {
          "description": "403 Forbidden\n\nThe server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated. If the request method was not HEAD and the server wishes to make public why the request has not been fulfilled, it SHOULD describe the reason for the refusal in the entity. If the server does not wish to make this information available to the client, the status code 404 (Not Found) can be used instead.\n",
          "body": {
            "application/json": {
              "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"type\": \"object\",\n  \"description\": \"Message\",\n  \"properties\": {\n    \"message\": {\n      \"type\": \"string\",\n      \"required\": true\n    }\n  }\n}\n",
              "example": "{\"message\": \"Access Denied\"}\n"
            }
          }
        },
        "404": {
          "description": "Not found",
          "body": {
            "application/json": {
              "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"type\": \"object\",\n  \"description\": \"Message\",\n  \"properties\": {\n    \"message\": {\n      \"type\": \"string\",\n      \"required\": true\n    }\n  }\n}\n",
              "example": "{\"message\": \"Resource not found\"}\n"
            }
          }
        }
      },
      "description": "Get staging profiles",
      "protocols": [
        "HTTPS"
      ],
      "method": "get"
    },
    {
      "responses": {
        "200": {
          "body": {
            "application/json": {
              "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"type\": \"object\",\n  \"description\": \"A collection of all staging profiles\",\n  \"properties\": {\n    \"stagingProfiles\":  {\n      \"type\": \"array\",\n      \"items\": { \"$ref\": \"staging_profile\" }\n    }\n  }\n}\n",
              "example": "{ \"stagingProfilesEdit\":\n  [\n    {\n      \"persistentProfileId\": \"N_QF_CC05_9\",\n      \"name\": \"Updated Profile Segment\",\n      \"internalName\": \"Name Assigned by Neustar\",\n      \"status\": \"restricted\"\n      \"internalCategories\": [\n        \"Internal Category Level 1\",\n        \"Internal Category Level 2\",\n        \"Internal Category Level 3\",\n        \"Internal Category Level 4\"\n      ],\n      \"categories\": [\"cool\", \"neat\", \"fab\"],\n      \"edited\": true\n    },\n    {\n      \"persistentProfileId\": \"S_046119\",\n      \"name\": \"Updated Profile Segment\",\n      \"internalName\": \"Name Assigned by Neustar\",\n      \"status\": \"restricted\",\n      \"internalCategories\": [\n        \"Internal Category Level 1\",\n        \"Internal Category Level 2\",\n        \"Internal Category Level 3\",\n        \"Internal Category Level 4\"\n      ],\n      \"categories\": [\"cool\", \"neat\", \"fab\"],\n      \"edited\": true\n    }\n  ]\n}\n"
            }
          }
        },
        "401": {
          "description": "Unauthorized\n\nThe request requires user authentication. The response MUST include a WWW-Authenticate header field (section 14.47) containing a challenge applicable to the requested resource. The client MAY repeat the request with a suitable Authorization header field (section 14.8). If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials. If the 401 response contains the same challenge as the prior response, and the user agent has already attempted authentication at least once, then the user SHOULD be presented the entity that was given in the response, since that entity might include relevant diagnostic information. HTTP access authentication is explained in \"HTTP Authentication: Basic and Digest Access Authentication\" [43].\n\nSimilar to 403 Forbidden, but specifically for use when authentication is required and has failed or has not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource. See Basic access authentication and Digest access authentication.\n",
          "body": {
            "application/json": {
              "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"type\": \"object\",\n  \"description\": \"Message\",\n  \"properties\": {\n    \"message\": {\n      \"type\": \"string\",\n      \"required\": true\n    }\n  }\n}\n",
              "example": "{\"message\": \"Authorization required\"}\n"
            }
          }
        },
        "403": {
          "description": "403 Forbidden\n\nThe server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated. If the request method was not HEAD and the server wishes to make public why the request has not been fulfilled, it SHOULD describe the reason for the refusal in the entity. If the server does not wish to make this information available to the client, the status code 404 (Not Found) can be used instead.\n",
          "body": {
            "application/json": {
              "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"type\": \"object\",\n  \"description\": \"Message\",\n  \"properties\": {\n    \"message\": {\n      \"type\": \"string\",\n      \"required\": true\n    }\n  }\n}\n",
              "example": "{\"message\": \"Access Denied\"}\n"
            }
          }
        },
        "422": {
          "description": "The 422 (Unprocessable Entity) status code means the server understands the content type of the request entity, and the syntax of the request entity is correct but was unable to process the contained instructions.\n",
          "body": {
            "application/json": {
              "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"type\": \"object\",\n  \"description\": \"Message\",\n  \"properties\": {\n    \"message\": {\n      \"type\": \"string\",\n      \"required\": true\n    }\n  }\n}\n",
              "example": "{\"message\": \"The request was well-formed but was unable to be followed due to semantic errors.\"}\n"
            }
          }
        }
      },
      "is": [
        "secured"
      ],
      "description": "Update multiple staging profiles",
      "body": {
        "application/json": {
          "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"type\": \"object\",\n  \"description\": \"Edit multiple staging profiles\",\n  \"properties\": {\n    \"stagingProfileEdits\": {\n      \"type\": \"array\",\n      \"items\" : {\"$ref\" : \"staging_profile_edit\"}\n    }\n  }\n}\n",
          "example": "{ \"stagingProfilesEdit\":\n  [\n    {\n      \"persistentProfileId\": \"N_QF_CC05_9\",\n      \"name\": \"Updated Profile Segment\",\n      \"internalName\": \"Name Assigned by Neustar\",\n      \"status\": \"restricted\"\n      \"internalCategories\": [\n        \"Internal Category Level 1\",\n        \"Internal Category Level 2\",\n        \"Internal Category Level 3\",\n        \"Internal Category Level 4\"\n      ],\n      \"categories\": [\"cool\", \"neat\", \"fab\"],\n      \"edited\": true\n    },\n    {\n      \"persistentProfileId\": \"S_046119\",\n      \"name\": \"Updated Profile Segment\",\n      \"internalName\": \"Name Assigned by Neustar\",\n      \"status\": \"restricted\",\n      \"internalCategories\": [\n        \"Internal Category Level 1\",\n        \"Internal Category Level 2\",\n        \"Internal Category Level 3\",\n        \"Internal Category Level 4\"\n      ],\n      \"categories\": [\"cool\", \"neat\", \"fab\"],\n      \"edited\": true\n    }\n  ]\n}\n"
        }
      },
      "protocols": [
        "HTTPS"
      ],
      "method": "patch"
    }
  ],
  "resources": [
    {
      "type": {
        "typedMember": {
          "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"type\": \"object\",\n  \"description\": \"A single staging profile\",\n  \"properties\": {\n    \"persistentProfileId\": {\n      \"type\": \"string\",\n      \"required\": true\n    },\n    \"internalName\": {\n      \"type\": \"string\",\n      \"required\": true\n    },\n    \"name\": {\n      \"type\": \"string\",\n      \"required\": true\n    },\n    \"status\": {\n      \"type\": \"string\",\n      \"required\": true\n    },\n    \"categories\": {\n      \"type\": \"array\",\n      \"items\": { \"type\": \"string\" },\n      \"required\": true\n    },\n    \"internalCategories\": {\n      \"type\": \"array\",\n      \"items\": { \"type\": \"string\" },\n      \"required\": true\n    },\n    \"edited\": {\n      \"type\": \"boolean\",\n      \"required\": true\n    }\n  }\n}\n"
        }
      },
      "uriParameters": {
        "persistentId": {
          "type": "string",
          "description": "Persistent ID of profile",
          "displayName": "persistentId",
          "required": true
        }
      },
      "relativeUri": "/{persistentId}",
      "methods": [
        {
          "responses": {
            "200": {
              "description": "OK",
              "body": {
                "application/json": {
                  "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"type\": \"object\",\n  \"description\": \"A single staging profile\",\n  \"properties\": {\n    \"persistentProfileId\": {\n      \"type\": \"string\",\n      \"required\": true\n    },\n    \"internalName\": {\n      \"type\": \"string\",\n      \"required\": true\n    },\n    \"name\": {\n      \"type\": \"string\",\n      \"required\": true\n    },\n    \"status\": {\n      \"type\": \"string\",\n      \"required\": true\n    },\n    \"categories\": {\n      \"type\": \"array\",\n      \"items\": { \"type\": \"string\" },\n      \"required\": true\n    },\n    \"internalCategories\": {\n      \"type\": \"array\",\n      \"items\": { \"type\": \"string\" },\n      \"required\": true\n    },\n    \"edited\": {\n      \"type\": \"boolean\",\n      \"required\": true\n    }\n  }\n}\n",
                  "example": "{\n  \"persistentProfileId\": \"N_QF_CC06_7_1\",\n  \"name\": \"Display Name Shown To User\",\n  \"internalName\": \"Name Assigned by Neustar\",\n  \"status\": \"scrub\",\n  \"internalCategories\": [\n    \"Internal Category Level 1\",\n    \"Internal Category Level 2\",\n    \"Internal Category Level 3\",\n    \"Internal Category Level 4\"\n  ],\n  \"categories\": [\n    \"Category Level 1\",\n    \"Category Level 2\",\n    \"Category Level 3\"\n  ]\n}\n"
                }
              }
            },
            "401": {
              "description": "Unauthorized\n\nThe request requires user authentication. The response MUST include a WWW-Authenticate header field (section 14.47) containing a challenge applicable to the requested resource. The client MAY repeat the request with a suitable Authorization header field (section 14.8). If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials. If the 401 response contains the same challenge as the prior response, and the user agent has already attempted authentication at least once, then the user SHOULD be presented the entity that was given in the response, since that entity might include relevant diagnostic information. HTTP access authentication is explained in \"HTTP Authentication: Basic and Digest Access Authentication\" [43].\n\nSimilar to 403 Forbidden, but specifically for use when authentication is required and has failed or has not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource. See Basic access authentication and Digest access authentication.\n",
              "body": {
                "application/json": {
                  "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"type\": \"object\",\n  \"description\": \"Message\",\n  \"properties\": {\n    \"message\": {\n      \"type\": \"string\",\n      \"required\": true\n    }\n  }\n}\n",
                  "example": "{\"message\": \"Authorization required\"}\n"
                }
              }
            },
            "403": {
              "description": "403 Forbidden\n\nThe server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated. If the request method was not HEAD and the server wishes to make public why the request has not been fulfilled, it SHOULD describe the reason for the refusal in the entity. If the server does not wish to make this information available to the client, the status code 404 (Not Found) can be used instead.\n",
              "body": {
                "application/json": {
                  "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"type\": \"object\",\n  \"description\": \"Message\",\n  \"properties\": {\n    \"message\": {\n      \"type\": \"string\",\n      \"required\": true\n    }\n  }\n}\n",
                  "example": "{\"message\": \"Access Denied\"}\n"
                }
              }
            },
            "404": {
              "description": "Not found",
              "body": {
                "application/json": {
                  "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"type\": \"object\",\n  \"description\": \"Message\",\n  \"properties\": {\n    \"message\": {\n      \"type\": \"string\",\n      \"required\": true\n    }\n  }\n}\n",
                  "example": "{\"message\": \"Resource not found\"}\n"
                }
              }
            }
          },
          "is": [
            "secured"
          ],
          "description": "Retrieve the staging profile",
          "method": "get"
        },
        {
          "responses": {
            "200": {
              "body": {
                "application/json": {
                  "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"type\": \"object\",\n  \"description\": \"A single staging profile\",\n  \"properties\": {\n    \"persistentProfileId\": {\n      \"type\": \"string\",\n      \"required\": true\n    },\n    \"internalName\": {\n      \"type\": \"string\",\n      \"required\": true\n    },\n    \"name\": {\n      \"type\": \"string\",\n      \"required\": true\n    },\n    \"status\": {\n      \"type\": \"string\",\n      \"required\": true\n    },\n    \"categories\": {\n      \"type\": \"array\",\n      \"items\": { \"type\": \"string\" },\n      \"required\": true\n    },\n    \"internalCategories\": {\n      \"type\": \"array\",\n      \"items\": { \"type\": \"string\" },\n      \"required\": true\n    },\n    \"edited\": {\n      \"type\": \"boolean\",\n      \"required\": true\n    }\n  }\n}\n",
                  "example": "{\n  \"persistentProfileId\": \"N_QF_CC06_7_1\",\n  \"name\": \"Display Name Shown To User\",\n  \"internalName\": \"Name Assigned by Neustar\",\n  \"status\": \"scrub\",\n  \"internalCategories\": [\n    \"Internal Category Level 1\",\n    \"Internal Category Level 2\",\n    \"Internal Category Level 3\",\n    \"Internal Category Level 4\"\n  ],\n  \"categories\": [\n    \"Category Level 1\",\n    \"Category Level 2\",\n    \"Category Level 3\"\n  ]\n}\n"
                }
              }
            },
            "401": {
              "description": "Unauthorized\n\nThe request requires user authentication. The response MUST include a WWW-Authenticate header field (section 14.47) containing a challenge applicable to the requested resource. The client MAY repeat the request with a suitable Authorization header field (section 14.8). If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials. If the 401 response contains the same challenge as the prior response, and the user agent has already attempted authentication at least once, then the user SHOULD be presented the entity that was given in the response, since that entity might include relevant diagnostic information. HTTP access authentication is explained in \"HTTP Authentication: Basic and Digest Access Authentication\" [43].\n\nSimilar to 403 Forbidden, but specifically for use when authentication is required and has failed or has not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource. See Basic access authentication and Digest access authentication.\n",
              "body": {
                "application/json": {
                  "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"type\": \"object\",\n  \"description\": \"Message\",\n  \"properties\": {\n    \"message\": {\n      \"type\": \"string\",\n      \"required\": true\n    }\n  }\n}\n",
                  "example": "{\"message\": \"Authorization required\"}\n"
                }
              }
            },
            "403": {
              "description": "403 Forbidden\n\nThe server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated. If the request method was not HEAD and the server wishes to make public why the request has not been fulfilled, it SHOULD describe the reason for the refusal in the entity. If the server does not wish to make this information available to the client, the status code 404 (Not Found) can be used instead.\n",
              "body": {
                "application/json": {
                  "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"type\": \"object\",\n  \"description\": \"Message\",\n  \"properties\": {\n    \"message\": {\n      \"type\": \"string\",\n      \"required\": true\n    }\n  }\n}\n",
                  "example": "{\"message\": \"Access Denied\"}\n"
                }
              }
            },
            "422": {
              "description": "The 422 (Unprocessable Entity) status code means the server understands the content type of the request entity, and the syntax of the request entity is correct but was unable to process the contained instructions.\n",
              "body": {
                "application/json": {
                  "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"type\": \"object\",\n  \"description\": \"Message\",\n  \"properties\": {\n    \"message\": {\n      \"type\": \"string\",\n      \"required\": true\n    }\n  }\n}\n",
                  "example": "{\"message\": \"The request was well-formed but was unable to be followed due to semantic errors.\"}\n"
                }
              }
            }
          },
          "is": [
            "secured"
          ],
          "description": "Update a staging profile",
          "body": {
            "application/json": {
              "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"type\": \"object\",\n  \"description\": \"Edit a staging profile\",\n  \"properties\": {\n    \"persistentProfileId\": {\n      \"type\": \"string\",\n      \"required\": true\n    },\n    \"name\": {\n      \"type\": \"string\",\n      \"required\": true\n    },\n    \"status\": {\n      \"type\": \"string\",\n      \"required\": true\n    },\n    \"categories\": {\n      \"type\": \"array\",\n      \"items\": { \"type\": \"string\" },\n      \"required\": true\n    }\n  }\n}\n",
              "example": "{\n  \"persistentProfileId\": \"N_QF_CC06_7_1\",\n  \"name\": \"Display Name Shown To User\",\n  \"internalName\": \"Name Assigned by Neustar\",\n  \"status\": \"scrub\",\n  \"internalCategories\": [\n    \"Internal Category Level 1\",\n    \"Internal Category Level 2\",\n    \"Internal Category Level 3\",\n    \"Internal Category Level 4\"\n  ],\n  \"categories\": [\n    \"Category Level 1\",\n    \"Category Level 2\",\n    \"Category Level 3\"\n  ]\n}\n"
            }
          },
          "method": "patch"
        }
      ],
      "relativeUriPathSegments": [
        "{persistentId}"
      ],
      "displayName": "{persistentId}"
    }
  ],
  "relativeUriPathSegments": [
    "staging-profiles"
  ],
  "displayName": "StagingProfileApi",
  "description": ""
}
